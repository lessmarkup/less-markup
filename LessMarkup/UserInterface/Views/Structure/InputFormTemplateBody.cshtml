@{
    /* This Source Code Form is subject to the terms of the Mozilla Public
     * License, v. 2.0. If a copy of the MPL was not distributed with this
     * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

    Layout = null;    
}<div class="form-group" ng-repeat="field in fields" ng-class="{'has-error has-feedback' : hasErrors(field.Property)}">
    <span ng-if="fieldVisible(field)">
        <span ng-if="field.Type == 'CheckBox'" class="checkbox">
            <label>
                <input type="checkbox" ng-model="object[field.Property]" ng-readonly="readOnly(field)"/>
                <span ng-bind="field.Text"></span>
            </label>
        </span>
        <span ng-if="field.Type != 'CheckBox'">
            <label class="control-label" for="{{field.Id}}" ng-bind="field.Text"></label>
            <span ng-switch="field.Type">
                <input type="text" ng-switch-when="Text" class="form-control" ng-model="object[field.Property]" ng-readonly="readOnly(field)" />
                <input type="email" ng-switch-when="Email" class="form-control" ng-model="object[field.Property]" ng-readonly="readOnly(field)" />
                <input type="number" ng-switch-when="Number" class="form-control" ng-model="object[field.Property]" ng-readonly="readOnly(field)" />
                <div ng-switch-when="Password" class="row">
                    <div class="col-xs-6">
                        <input type="password" class="form-control" ng-model="object[field.Property]" placeholder="Enter Password" ng-readonly="readOnly(field)" />
                    </div>
                    <div class="col-xs-6">
                        <input type="password" class="form-control" ng-model="object[field.Property + '-Repeat']" placeholder="Repeat Password" ng-readonly="readOnly(field)" />
                    </div>
                </div>
                <textarea ng-switch-when="RichText" ui-tinymce ng-model="object[field.Property]" class="form-control" ng-readonly="readOnly(field)"></textarea>
                <input type="file" ng-switch-when="File" class="form-control" fileread="object[field.Property]" ng-readonly="readOnly(field)" />
                <textarea class="form-control" ng-switch-when="CodeText" ui-codemirror="codeMirrorDefaultOptions" ng-model="object[field.Property]" ng-readonly="readOnly(field)"></textarea>
                <select ng-switch-when="Select" ng-model="object[field.Property]" class="form-control">
                    <option ng-repeat="select in field.SelectValues" value="{{select.Value}}" ng-bind="select.Text"></option>
                </select>
                <input type="text" ng-switch-when="Typeahead" class="form-control" ng-model="object[field.Property]" ng-readonly="readOnly(field)" typeahead="name for name in getTypeahead(field, $viewValue)"/>
            </span>
            <span class="glyphicon glyphicon-remove form-control-feedback" ng-if="hasErrors(field.Property)"></span>
            <span class="help-block" ng-bind="helpText(field)"></span>
        </span>
    </span>
</div>
<div class="bg-danger" ng-if="submitError.length > 0" ng-bind="submitError"></div>
<div class="bg-success" ng-if="submitSuccess.length > 0" ng-bind="submitSuccess"></div>
