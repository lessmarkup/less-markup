/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using LessMarkup.DataObjects.Common;
using LessMarkup.Interfaces.Data;

namespace LessMarkup.DataObjects.Security
{
    public class User : NonSiteDataObject
    {
        public bool IsRemoved { get; set; }
        public bool IsBlocked { get; set; }
        public string BlockReason { get; set; }
        [Required, MaxLength(100)]
        public string Name { get; set; }
        [Required, MaxLength(100)]
        public string Email { get; set; }
        public string Salt { get; set; }
        public string Password { get; set; }
        public bool IsAdministrator { get; set; }
        public DateTime Registered { get; set; }
        public bool IsValidated { get; set; }
        public bool IsApproved { get; set; }
        public bool EmailConfirmed { get; set; }
        public bool PasswordAutoGenerated { get; set; }
        public DateTime? LastLogin { get; set; }
        public DateTime? LastBlock { get; set; }
        public DateTime? LastPasswordChanged { get; set; }
        public DateTime? LastActivity { get; set; }
        public DateTime? RegistrationExpires { get; set; }
        public DateTime? UnblockTime { get; set; }
        public string LockReason { get; set; }
        public string ValidateSecret { get; set; }
        public bool RequiresPasswordReset { get; set; }
        public Image AvatarImage { get; set; }
        [ForeignKey("AvatarImage")]
        public long? AvatarImageId { get; set; }
        public Image UserImage { get; set; }
        [ForeignKey("UserImage")]
        public long? UserImageId { get; set; }
        public string Title { get; set; }
        public string Signature { get; set; }
        public bool ShowEmail { get; set; }
        [Timestamp]
        public byte[] Version { get; set; }
        public MultiFactorAuthorization MultiFactorAuthorization { get; set; }
        public string AuthProvider { get; set; }
        public string AuthProviderUserId { get; set; }
        [ForeignKey("Site")]
        public long? SiteId { get; set; }
        public Site Site { get; set; }
        public string Settings { get; set; }
        public bool SaveViewHistory { get; set; }
        public string Properties { get; set; }

        public List<UserAddress> Addresses { get; set; }
        public List<UserGroupMembership> Groups { get; set; }
        public List<UserLoginIpAddress> IpAddresses { get; set; } 
    }
}
